//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SocketModelWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SocketModel), typeof(System.Object));
		L.RegFunction("New", _CreateSocketModel);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("command", get_command, set_command);
		L.RegVar("message", get_message, set_message);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSocketModel(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				SocketModel obj = new SocketModel();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 4)
			{
				byte arg0 = (byte)LuaDLL.luaL_checknumber(L, 1);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
				byte[] arg3 = ToLua.CheckByteBuffer(L, 4);
				SocketModel obj = new SocketModel(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: SocketModel.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_command(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SocketModel obj = (SocketModel)o;
			int ret = obj.command;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index command on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_message(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SocketModel obj = (SocketModel)o;
			byte[] ret = obj.message;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index message on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_command(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SocketModel obj = (SocketModel)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.command = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index command on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_message(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SocketModel obj = (SocketModel)o;
			byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
			obj.message = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index message on a nil value");
		}
	}
}

